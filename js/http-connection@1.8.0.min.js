/**
 * Minified by jsDelivr using Terser v5.15.0.
 * Original file: /npm/@walletconnect/http-connection@1.8.0/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import EventEmitter from"eventemitter3";import{XMLHttpRequest}from"xhr2-cookies";import{getFromWindow}from"@walletconnect/utils";const XHR=getFromWindow("XMLHttpRequest")||XMLHttpRequest;class HTTPConnection extends EventEmitter{constructor(e){super(),this.url=e}formatError(e,t,r=-1){return{error:{message:t,code:r},id:e.id,jsonrpc:e.jsonrpc}}send(e,t){return new Promise((r=>{if("eth_subscribe"===e.method){const t=this.formatError(e,"Subscriptions are not supported by this HTTP endpoint");return this.emit("error",t),r(t)}const o=new XHR;let s=!1;const n=(n,i)=>{if(!s)if(o.abort(),s=!0,t)t(n,i);else{const{id:t,jsonrpc:o}=e,s=n?{id:t,jsonrpc:o,error:{message:n.message,code:n.code}}:{id:t,jsonrpc:o,result:i};this.emit("payload",s),r(s)}};o.open("POST",this.url,!0),o.setRequestHeader("Content-Type","application/json"),o.timeout=6e4,o.onerror=n,o.ontimeout=n,o.onreadystatechange=()=>{if(4===o.readyState)try{const e=JSON.parse(o.responseText);n(e.error,e.result)}catch(e){n(e)}},o.send(JSON.stringify(e))}))}}export default HTTPConnection;
//# sourceMappingURL=/sm/2a6564d0c70eeeed1b652092650ed593c1e5cf1eaff42e66152181294e708704.map